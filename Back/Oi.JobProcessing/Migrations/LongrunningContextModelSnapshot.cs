// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OI.JobProcessing.Models;

#nullable disable

namespace OI.JobProcessing.Migrations
{
    [DbContext(typeof(LongrunningContext))]
    partial class LongrunningContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("OI.JobProcessing.Models.Aggregatedcounter", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("Expireat")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("expireat");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("key");

                    b.Property<long>("Value")
                        .HasColumnType("bigint")
                        .HasColumnName("value");

                    b.HasKey("Id")
                        .HasName("aggregatedcounter_pkey");

                    b.HasIndex(new[] { "Key" }, "aggregatedcounter_key_key")
                        .IsUnique();

                    b.ToTable("aggregatedcounter", "hangfire");
                });

            modelBuilder.Entity("OI.JobProcessing.Models.Counter", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("Expireat")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("expireat");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("key");

                    b.Property<long>("Value")
                        .HasColumnType("bigint")
                        .HasColumnName("value");

                    b.HasKey("Id")
                        .HasName("counter_pkey");

                    b.HasIndex(new[] { "Expireat" }, "ix_hangfire_counter_expireat");

                    b.HasIndex(new[] { "Key" }, "ix_hangfire_counter_key");

                    b.ToTable("counter", "hangfire");
                });

            modelBuilder.Entity("OI.JobProcessing.Models.Hash", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("Expireat")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("expireat");

                    b.Property<string>("Field")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("field");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("key");

                    b.Property<int>("Updatecount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("updatecount");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("value");

                    b.HasKey("Id")
                        .HasName("hash_pkey");

                    b.HasIndex(new[] { "Key", "Field" }, "hash_key_field_key")
                        .IsUnique();

                    b.HasIndex(new[] { "Expireat" }, "ix_hangfire_hash_expireat");

                    b.ToTable("hash", "hangfire");
                });

            modelBuilder.Entity("OI.JobProcessing.Models.Job", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Arguments")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("arguments");

                    b.Property<DateTime>("Createdat")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createdat");

                    b.Property<DateTime?>("Expireat")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("expireat");

                    b.Property<string>("Invocationdata")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("invocationdata");

                    b.Property<long?>("Stateid")
                        .HasColumnType("bigint")
                        .HasColumnName("stateid");

                    b.Property<string>("Statename")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("statename");

                    b.Property<int>("Updatecount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("updatecount");

                    b.HasKey("Id")
                        .HasName("job_pkey");

                    b.HasIndex(new[] { "Expireat" }, "ix_hangfire_job_expireat");

                    b.HasIndex(new[] { "Statename" }, "ix_hangfire_job_statename");

                    b.ToTable("job", "hangfire");
                });

            modelBuilder.Entity("OI.JobProcessing.Models.Jobparameter", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("Jobid")
                        .HasColumnType("bigint")
                        .HasColumnName("jobid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("Updatecount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("updatecount");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("value");

                    b.HasKey("Id")
                        .HasName("jobparameter_pkey");

                    b.HasIndex(new[] { "Jobid", "Name" }, "ix_hangfire_jobparameter_jobidandname");

                    b.ToTable("jobparameter", "hangfire");
                });

            modelBuilder.Entity("OI.JobProcessing.Models.Jobqueue", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("Fetchedat")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fetchedat");

                    b.Property<long>("Jobid")
                        .HasColumnType("bigint")
                        .HasColumnName("jobid");

                    b.Property<string>("Queue")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("queue");

                    b.Property<int>("Updatecount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("updatecount");

                    b.HasKey("Id")
                        .HasName("jobqueue_pkey");

                    b.HasIndex(new[] { "Fetchedat", "Queue", "Jobid" }, "ix_hangfire_jobqueue_fetchedat_queue_jobid");

                    NpgsqlIndexBuilderExtensions.HasNullSortOrder(b.HasIndex(new[] { "Fetchedat", "Queue", "Jobid" }, "ix_hangfire_jobqueue_fetchedat_queue_jobid"), new[] { NullSortOrder.NullsFirst, NullSortOrder.NullsLast, NullSortOrder.NullsLast });

                    b.HasIndex(new[] { "Jobid", "Queue" }, "ix_hangfire_jobqueue_jobidandqueue");

                    b.HasIndex(new[] { "Queue", "Fetchedat" }, "ix_hangfire_jobqueue_queueandfetchedat");

                    b.ToTable("jobqueue", "hangfire");
                });

            modelBuilder.Entity("OI.JobProcessing.Models.List", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("Expireat")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("expireat");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("key");

                    b.Property<int>("Updatecount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("updatecount");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("value");

                    b.HasKey("Id")
                        .HasName("list_pkey");

                    b.HasIndex(new[] { "Expireat" }, "ix_hangfire_list_expireat");

                    b.ToTable("list", "hangfire");
                });

            modelBuilder.Entity("OI.JobProcessing.Models.Lock", b =>
                {
                    b.Property<DateTime?>("Acquired")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("acquired");

                    b.Property<string>("Resource")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("resource");

                    b.Property<int>("Updatecount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("updatecount");

                    b.HasIndex(new[] { "Resource" }, "lock_resource_key")
                        .IsUnique();

                    b.ToTable("lock", "hangfire");
                });

            modelBuilder.Entity("OI.JobProcessing.Models.Oijob", b =>
                {
                    b.Property<int>("JobId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("EncodedString")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("JobStateId")
                        .HasColumnType("integer");

                    b.Property<string>("OriginalString")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReturnedData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("JobId")
                        .HasName("JobState_pkey");

                    b.ToTable("OIJobs", (string)null);
                });

            modelBuilder.Entity("OI.JobProcessing.Models.OijobState", b =>
                {
                    b.Property<int>("JobStateId")
                        .HasColumnType("integer");

                    b.Property<string>("JobStateName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("JobStateId")
                        .HasName("JobStates_pkey");

                    b.ToTable("OIJobStates", (string)null);
                });

            modelBuilder.Entity("OI.JobProcessing.Models.Schema", b =>
                {
                    b.Property<int>("Version")
                        .HasColumnType("integer")
                        .HasColumnName("version");

                    b.HasKey("Version")
                        .HasName("schema_pkey");

                    b.ToTable("schema", "hangfire");
                });

            modelBuilder.Entity("OI.JobProcessing.Models.Server", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("data");

                    b.Property<DateTime>("Lastheartbeat")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("lastheartbeat");

                    b.Property<int>("Updatecount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("updatecount");

                    b.HasKey("Id")
                        .HasName("server_pkey");

                    b.ToTable("server", "hangfire");
                });

            modelBuilder.Entity("OI.JobProcessing.Models.Set", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("Expireat")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("expireat");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("key");

                    b.Property<double>("Score")
                        .HasColumnType("double precision")
                        .HasColumnName("score");

                    b.Property<int>("Updatecount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("updatecount");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("value");

                    b.HasKey("Id")
                        .HasName("set_pkey");

                    b.HasIndex(new[] { "Expireat" }, "ix_hangfire_set_expireat");

                    b.HasIndex(new[] { "Key", "Score" }, "ix_hangfire_set_key_score");

                    b.HasIndex(new[] { "Key", "Value" }, "set_key_value_key")
                        .IsUnique();

                    b.ToTable("set", "hangfire");
                });

            modelBuilder.Entity("OI.JobProcessing.Models.State", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("Createdat")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createdat");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("data");

                    b.Property<long>("Jobid")
                        .HasColumnType("bigint")
                        .HasColumnName("jobid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("reason");

                    b.Property<int>("Updatecount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("updatecount");

                    b.HasKey("Id")
                        .HasName("state_pkey");

                    b.HasIndex(new[] { "Jobid" }, "ix_hangfire_state_jobid");

                    b.ToTable("state", "hangfire");
                });

            modelBuilder.Entity("OI.JobProcessing.Models.Jobparameter", b =>
                {
                    b.HasOne("OI.JobProcessing.Models.Job", "Job")
                        .WithMany("Jobparameters")
                        .HasForeignKey("Jobid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("jobparameter_jobid_fkey");

                    b.Navigation("Job");
                });

            modelBuilder.Entity("OI.JobProcessing.Models.State", b =>
                {
                    b.HasOne("OI.JobProcessing.Models.Job", "Job")
                        .WithMany("States")
                        .HasForeignKey("Jobid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("state_jobid_fkey");

                    b.Navigation("Job");
                });

            modelBuilder.Entity("OI.JobProcessing.Models.Job", b =>
                {
                    b.Navigation("Jobparameters");

                    b.Navigation("States");
                });
#pragma warning restore 612, 618
        }
    }
}
